#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü–†–û–°–¢–û–ô –°–ö–†–ò–ü–¢ –î–õ–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø CHROMEDRIVER
–†–µ—à–∞–µ—Ç –æ—à–∏–±–∫—É [WinError 193] –∏ –¥—Ä—É–≥–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –¥—Ä–∞–π–≤–µ—Ä–æ–º
"""

import os
import sys
import shutil
import subprocess
import requests
import zipfile
import tempfile
from pathlib import Path

def print_status(message, status="info"):
    """–ö—Ä–∞—Å–∏–≤—ã–π –≤—ã–≤–æ–¥ —Å—Ç–∞—Ç—É—Å–∞"""
    symbols = {"info": "‚ÑπÔ∏è", "success": "‚úÖ", "error": "‚ùå", "warning": "‚ö†Ô∏è", "process": "üîß"}
    print(f"{symbols.get(status, '‚ÑπÔ∏è')} {message}")

def clear_webdriver_cache():
    """–û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞ webdriver-manager"""
    print_status("–û—á–∏—â–∞–µ–º –∫–µ—à webdriver-manager...", "process")
    
    cache_paths = [
        Path.home() / '.wdm',
        Path.home() / '.cache' / 'selenium',
        Path(tempfile.gettempdir()) / 'webdriver'
    ]
    
    cleared = 0
    for cache_path in cache_paths:
        if cache_path.exists():
            try:
                shutil.rmtree(cache_path)
                print_status(f"–£–¥–∞–ª–µ–Ω –∫–µ—à: {cache_path}", "success")
                cleared += 1
            except Exception as e:
                print_status(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å {cache_path}: {e}", "warning")
    
    if cleared == 0:
        print_status("–ö–µ—à –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É–∂–µ –æ—á–∏—â–µ–Ω", "info")
    
    return True

def download_chromedriver():
    """–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ ChromeDriver"""
    print_status("–°–∫–∞—á–∏–≤–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π ChromeDriver...", "process")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç–∞–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é
        version_url = "https://googlechromelabs.github.io/chrome-for-testing/LATEST_RELEASE_STABLE"
        response = requests.get(version_url, timeout=10)
        version = response.text.strip()
        print_status(f"–ü–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è: {version}", "info")
        
        # URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è (Windows 64-bit)
        download_url = f"https://storage.googleapis.com/chrome-for-testing-public/{version}/win64/chromedriver-win64.zip"
        
        # –°–∫–∞—á–∏–≤–∞–µ–º –∞—Ä—Ö–∏–≤
        print_status("–°–∫–∞—á–∏–≤–∞–µ–º –∞—Ä—Ö–∏–≤...", "process")
        zip_response = requests.get(download_url, timeout=30)
        zip_response.raise_for_status()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        with tempfile.NamedTemporaryFile(suffix='.zip', delete=False) as tmp_file:
            tmp_file.write(zip_response.content)
            zip_path = tmp_file.name
        
        # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º
        extract_dir = Path(tempfile.gettempdir()) / "chromedriver_temp"
        if extract_dir.exists():
            shutil.rmtree(extract_dir)
        
        with zipfile.ZipFile(zip_path, 'r') as zip_ref:
            zip_ref.extractall(extract_dir)
        
        # –ù–∞—Ö–æ–¥–∏–º chromedriver.exe
        chromedriver_exe = None
        for root, dirs, files in os.walk(extract_dir):
            for file in files:
                if file == "chromedriver.exe":
                    chromedriver_exe = Path(root) / file
                    break
            if chromedriver_exe:
                break
        
        if not chromedriver_exe:
            print_status("chromedriver.exe –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∞—Ä—Ö–∏–≤–µ", "error")
            return False
        
        # –ö–æ–ø–∏—Ä—É–µ–º –≤ —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É
        current_dir = Path.cwd()
        destination = current_dir / "chromedriver.exe"
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª –µ—Å–ª–∏ –µ—Å—Ç—å
        if destination.exists():
            destination.unlink()
        
        shutil.copy2(chromedriver_exe, destination)
        print_status(f"ChromeDriver —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {destination}", "success")
        
        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        os.unlink(zip_path)
        shutil.rmtree(extract_dir)
        
        return True
        
    except Exception as e:
        print_status(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ ChromeDriver: {e}", "error")
        return False

def update_packages():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤"""
    print_status("–û–±–Ω–æ–≤–ª—è–µ–º Python –ø–∞–∫–µ—Ç—ã...", "process")
    
    packages = ["selenium", "webdriver-manager", "requests"]
    
    for package in packages:
        try:
            print_status(f"–û–±–Ω–æ–≤–ª—è–µ–º {package}...", "process")
            result = subprocess.run(
                [sys.executable, "-m", "pip", "install", "--upgrade", package],
                capture_output=True,
                text=True,
                check=True
            )
            print_status(f"{package} –æ–±–Ω–æ–≤–ª–µ–Ω", "success")
        except subprocess.CalledProcessError as e:
            print_status(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ {package}: {e.stderr}", "error")

def test_chromedriver():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ChromeDriver"""
    print_status("–¢–µ—Å—Ç–∏—Ä—É–µ–º ChromeDriver...", "process")
    
    test_code = '''
import os
import sys

# –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ chromedriver.exe
chromedriver_path = os.path.join(os.getcwd(), "chromedriver.exe")
if os.path.exists(chromedriver_path):
    print("‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π chromedriver.exe –Ω–∞–π–¥–µ–Ω")
else:
    print("‚ùå –õ–æ–∫–∞–ª—å–Ω—ã–π chromedriver.exe –Ω–µ –Ω–∞–π–¥–µ–Ω")

# –¢–µ—Å—Ç 2: –ò–º–ø–æ—Ä—Ç Selenium
try:
    from selenium import webdriver
    from selenium.webdriver.chrome.service import Service
    from selenium.webdriver.chrome.options import Options
    print("‚úÖ Selenium –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ Selenium: {e}")
    sys.exit(1)

# –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ Chrome options
try:
    options = Options()
    options.add_argument("--headless")
    options.add_argument("--no-sandbox")
    options.add_argument("--disable-dev-shm-usage")
    print("‚úÖ Chrome options —Å–æ–∑–¥–∞–Ω—ã")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Chrome options: {e}")

# –¢–µ—Å—Ç 4: –°–æ–∑–¥–∞–Ω–∏–µ Service
try:
    if os.path.exists(chromedriver_path):
        service = Service(chromedriver_path)
        print("‚úÖ Service —Å–æ–∑–¥–∞–Ω —Å –ª–æ–∫–∞–ª—å–Ω—ã–º –¥—Ä–∞–π–≤–µ—Ä–æ–º")
    else:
        from webdriver_manager.chrome import ChromeDriverManager
        service = Service(ChromeDriverManager().install())
        print("‚úÖ Service —Å–æ–∑–¥–∞–Ω —Å webdriver-manager")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Service: {e}")

print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! ChromeDriver –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.")
'''
    
    try:
        exec(test_code)
        return True
    except Exception as e:
        print_status(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}", "error")
        return False

def create_test_script():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã"""
    print_status("–°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç...", "process")
    
    test_script = '''#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–ï–°–¢–û–í–´–ô –°–ö–†–ò–ü–¢ –î–õ–Ø –ü–†–û–í–ï–†–ö–ò CHROMEDRIVER
–ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
"""

import os
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options

def test_chrome():
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º ChromeDriver...")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Chrome
    options = Options()
    options.add_argument("--headless")  # –§–æ–Ω–æ–≤—ã–π —Ä–µ–∂–∏–º
    options.add_argument("--no-sandbox")
    options.add_argument("--disable-dev-shm-usage")
    
    driver = None
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π chromedriver
        chromedriver_path = os.path.join(os.getcwd(), "chromedriver.exe")
        if os.path.exists(chromedriver_path):
            print("üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π ChromeDriver...")
            service = Service(chromedriver_path)
            driver = webdriver.Chrome(service=service, options=options)
        else:
            print("üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º WebDriver Manager...")
            from webdriver_manager.chrome import ChromeDriverManager
            service = Service(ChromeDriverManager().install())
            driver = webdriver.Chrome(service=service, options=options)
        
        # –¢–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–∞–π—Ç
        print("üåê –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ Google...")
        driver.get("https://www.google.com")
        title = driver.title
        
        print(f"‚úÖ –£–°–ü–ï–•! –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {title}")
        print("‚úÖ ChromeDriver —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
        return False
        
    finally:
        if driver:
            driver.quit()

if __name__ == "__main__":
    success = test_chrome()
    if success:
        print("üéâ –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ! –ú–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–∞—à—É –ø—Ä–æ–≥—Ä–∞–º–º—É.")
    else:
        print("üîß –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª. –ó–∞–ø—É—Å—Ç–∏—Ç–µ fix_chromedriver.py –µ—â–µ —Ä–∞–∑.")
'''
    
    test_file = Path.cwd() / "test_chromedriver.py"
    with open(test_file, 'w', encoding='utf-8') as f:
        f.write(test_script)
    
    print_status(f"–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω: {test_file}", "success")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    print("=" * 60)
    print("üöÄ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú –° CHROMEDRIVER")
    print("=" * 60)
    
    try:
        # –®–∞–≥ 1: –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞
        clear_webdriver_cache()
        print()
        
        # –®–∞–≥ 2: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤
        update_packages()
        print()
        
        # –®–∞–≥ 3: –°–∫–∞—á–∏–≤–∞–Ω–∏–µ ChromeDriver
        if download_chromedriver():
            print_status("ChromeDriver –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ!", "success")
        print()
        
        # –®–∞–≥ 4: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        print_status("–ü—Ä–æ–≤–æ–¥–∏–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...", "process")
        if test_chromedriver():
            print_status("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ!", "success")
        print()
        
        # –®–∞–≥ 5: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
        create_test_script()
        print()
        
        # –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        print("=" * 60)
        print("üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
        print("=" * 60)
        print("‚úÖ ChromeDriver –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
        print("üìÑ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª 'test_chromedriver.py' –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏")
        print("üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç—å –≤–∞—à—É –æ—Å–Ω–æ–≤–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É")
        print()
        print("üìù –ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:")
        print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python test_chromedriver.py (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏)")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤–∞—à—É –æ—Å–Ω–æ–≤–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É")
        print("3. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –æ—Å—Ç–∞–ª–∏—Å—å - –∑–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –µ—â–µ —Ä–∞–∑")
        
    except KeyboardInterrupt:
        print_status("–ü—Ä–æ—Ü–µ—Å—Å –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º", "warning")
    except Exception as e:
        print_status(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}", "error")
        print("üîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∏–ø—Ç –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–º–æ—â—å—é")

if __name__ == "__main__":
    main()

